---
import "../../styles/styles.css";
import Readme from "../../components/Readme.astro";
import Topnav from "../../components/Topnav.astro";
import Footer from "../../components/Footer.astro";
import Likebtn from "../../components/Likebtn.astro";
import Card from "../../components/Card.astro";
export async function getStaticPaths() {
  const url = "https://aruswkvjfqmwbmdbzrgy.supabase.co/rest/v1/sakurafestival";
  const options = {
    headers: {
      apikey:
        "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImFydXN3a3ZqZnFtd2JtZGJ6cmd5Iiwicm9sZSI6ImFub24iLCJpYXQiOjE2Nzg3Nzc0NTgsImV4cCI6MTk5NDM1MzQ1OH0.8v-p9C_alBTmibzL_qtGCNqtAkcNRGL5TGvI2UFHXH0",
    },
  };

  const respons = await fetch(url, options);
  const data = await respons.json();

  return data.map((item) => ({
    params: { slug: item.slug },
    props: { item },
  }));
}

const { item } = Astro.props;
---

<html lang="en">
  <head>
    <meta charset="utf-8" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="viewport" content="width=device-width" />
    <link rel="stylesheet" href="https://use.typekit.net/qqk5mpc.css" />
    <meta name="generator" content={Astro.generator} />

    <title>forside</title>
  </head>
  <body>
    <Topnav />
    <main>
      <div class="eventimg">
        <div class="like">
          <Likebtn />
        </div>
        <img src={"../public/images/" + `${item.image_path}`} alt="" />
      </div>
      <div class="eventinfo">
        <div class="prioinfo">
          <h3>{item.event_firm}</h3>
          <h1>{item.name}</h1>
          <p>{item.description}</p>
        </div>
        <div class="infoknap">
          <Readme />
        </div>

        <div class="miniinfo">
          <p>{item.place}</p>
          <p>{item.day}</p>
          <p>{item.time}</p>
        </div>
      </div>
    </main>
    <Footer />
  </body>
</html>

<style>
  main {
    padding: 2rem 1rem;
  }
  main > * {
    flex-basis: 100%;
  }

  .like {
    position: absolute;
    transform-origin: right;
    top: 0%;
    right: 0%;
    width: 181px;
  }

  .eventinfo {
    display: flex;
    flex-direction: column;
    border: var(--redborder);
    align-content: center;
    justify-items: center;
  }
  main > * {
    flex-basis: 100%;
  }
  h1 {
    color: black;
    font-size: 3rem;
  }

  h3 {
    font-size: 1.5rem;
  }
  .eventinfo {
    display: flex;
    position: relative;
    flex-direction: column;
    border: var(--redborder);
    align-content: center;
    justify-items: center;
  }

  .eventimg {
    border: var(--redborder);
    position: relative;
  }
  img {
    align-self: stretch;
    object-fit: cover;
    height: 100%;
  }
  .infoknap {
    margin-block: 1rem;
    margin-left: 1rem;
  }
  .prioinfo {
    margin-top: 5rem;
    margin-left: 1rem;
  }
  .miniinfo {
    position: absolute;
    border: var(--redborder);

    align-self: flex-end;

    transform-origin: top;
    padding: 0.5rem 1rem;
    text-align: start;
    line-height: 1.4rem;

    width: 10rem;
    background-color: var(--backgroundcolor);
  }
  .like {
    position: absolute;

    width: 181px;
  }
  @media (min-width: 700px) {
    main {
      display: grid;
      grid-template-columns: 1fr 1fr;
      margin: 4rem;
      padding: 0;
    }
    .prioinfo {
      margin-top: 0rem;
      margin-left: 0rem;
    }
    .like {
      top: 0%;
      right: 0%;
    }
    .infoknap {
      margin-block: 1rem;
      margin-left: 0rem;
    }
    .eventinfo {
      padding: 4rem;
    }

    .miniinfo {
      bottom: -0.1%;
      left: 80%;

      padding: 0.5rem 1rem;

      width: 10rem;
    }
  }
</style>
